# workflows:
#     react-native-android:
#         name: React Native Android
#         max_build_duration: 120
#         instance_type: mac_mini_m2
#         environment:
#           # groups:
#           #   - mars
#           # android_signing:
#           #    - CM_KEYSTORE
#         #   vars:
#         #     PACKAGE_NAME: "io.codemagic.sample.reactnative" # <-- Put your package name here e.g. com.domain.myapp
#           node: 20.15.1
#           npm: 10.7.0
#           xcode: 15.4
#           # java: 17
#           # xcode: 15.2
#         # cache:
#         #   cache_paths:
#         #     - $CM_BUILD_DIR/node_modules
#         pre_clone_scripts:
#           - name: Scripts before repository cloned
#             script:
#               echo $TEST
#         scripts:
#             - name: Install npm dependencies
#               script: |         
#                  npm install --legacy-peer-deps
#                  npm uninstall @rnmapbox/maps
#             - name: Set Android SDK location
#               script: |
#                 echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"            
#             - name: Build Android release
#               script: |
#                 cd android
#                 ./gradlew assembleDebug 
#         artifacts:
#             - android/app/build/outputs/**/*.aab
#             - android/app/build/outputs/**/*.apk
#     react-native-ios:
#         name: React Native iOS
#         max_build_duration: 120
#         instance_type: mac_mini_m2
#         # integrations:
#         #   app_store_connect: codemagic
#         environment:
#           ios_signing:
#             distribution_type: app_store
#             bundle_identifier: io.cm.expensify.chat
#           vars:
#             XCODE_WORKSPACE: "NewExpensify.xcworkspace" # <-- Put the name of your Xcode workspace here
#             XCODE_SCHEME: "NewExpensify" # <-- Put the name of your Xcode scheme here
#             APP_ID: 1555555551 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
#           node: 20.10.0
#           npm: 10.2.3
#           xcode: 15.3
  
#           # xcode: latest
#           # cocoapods: default
#         cache:
#           cache_paths:
#             - $HOME/Library/Caches/CocoaPods
#             - $CM_BUILD_DIR/node_modules
#         scripts:
#             - name: Install npm dependencies
#               script: |
#                 npm install --legacy-peer-deps
#             - name: Install CocoaPods dependencies
#               script: |
#                 cd ios && pod install
#             # - name: Set Info.plist values
#             #   script: |
#             #     # This allows publishing without manually answering the question about encryption 
#             #     PLIST=$CM_BUILD_DIR/$XCODE_SCHEME/Info.plist
#             #     PLIST_BUDDY=/usr/libexec/PlistBuddy
#             #     $PLIST_BUDDY -c "Add :ITSAppUsesNonExemptEncryption bool false" $PLIST
#             - name: Set up code signing settings on Xcode project
#               script: |
#                 xcode-project use-profiles --project=$CM_BUILD_DIR/ios/NewExpensify.xcodeproj
#             # - name: Increment build number
#             #   script: |
#             #     cd $CM_BUILD_DIR/ios
#             #     LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "$APP_ID")
#             #     agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
#             - name: Build ipa for distribution
#               script: |
#                 xcode-project build-ipa \
#                   --workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" \
#                   --scheme "$XCODE_SCHEME"
#         artifacts:
#             - build/ios/ipa/*.ipa
#             - /tmp/xcodebuild_logs/*.log
#             - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
#             - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM


workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 60
        instance_type: mac_mini_m2
    
        environment: 

          vars:
                CM_KEYSTORE: Encrypted(Z0FBQUFBQmcwbDY4ZXpPX2hteWxOSkNQU0ZIOWExN1BkZm5DX1VUMXVYbnVSLUtiMVhhMGVqT1ZHVUEweFZlamhDNEpNRXJ6LVQ1TU9QX0E5ZDdycmNjaVQzdHBrY0hpSnZsUl80T2NnWHJnVmc5ZWJHX2tlNkk4WHZYTUJMR01HUXZOVHoxWDhyX0dYVUExbjQyeGZrQ29ObjdfTTNQa1hfUnRkQVlTY3FLOGlPaS1ncWI0ZmlVVFVjc09QZU14TXlLYjRpVF9IcHRZLVFPNkV5Z0xKUzA2dlpFWkQwYnFuMkx0VWNGX1VTaU9UZnVTcWpudDhWakgwOHhnT19TQ3h4M0RORUNNQ1liQks0R1RvZDZxQnByT29zOGJFdVk4RnJSdXRBSy1HaW9JVnJUdVlndS1VZkNET285WDdCaUZhVUZDN1YtTExkem5uSXZmZERSMkI5eHM0cGlWZUlLQkxkTFVWNEd4TFRNYl9uOUFlTi1wMXlld1NsZWQ5eG5fcmdJdDNPYW10alZ5ZWhVNWFjb3E3Q1ZmNTJkTjdYcEh3WnpITlltSDhCS0EwY2FIZFg0b0NsblZUY1BKaHJYc3FueWh3UWd3WkhjaUJJaUpKanNRWG1PVnpOVFVOcDhvS19uZF9aVUZkVnIwSUlSYTRZd25RRGJnc3AyRkFVZHJSR0ZaS1hYUmI3SlpmcG5USlpHQi1NMFJWWFVST19pLWVsZEgzTk5CNFhLS3NZRXNhQUVjdHp2ZUNBdWpWTlRmYldxUjFMMndncVk1Nk5rTW9MNldjV3RrR3NwYXhsVVNSNUNpWE5TcnltY2E4bnNhLUk5Ry1pd1RXZVJxWTU0V0w2SUhDbVRobkFReFo3Vk5TVm54N1g1SFdVTVFDdUZROTRmZEE3a1dKeWEyaFlrYWRFLXJQaHNLdk1XcTBIV0tlUmFiLW5BYXlyZWNlOWpyd2dkSWl3Zk8xR3JpWmhQTDFPeUZPMXI2RHo0SFdudGh0X01rNHJPVXhuT1ZabkxmaUJ6Vjl6cjRMZXgxWE9EUjRKVkVYY0lHRDdHcVFMODBjVHo5UXcwLW5kSEhCR1dPVWtYYWVSMUxTb3BERmU3ZTZBYlQtNEViaXU3UkEtZ0hrVURRa0p3YmRnT1hfdkFJWXVaWE1Vcmw0T1ZMYXVGT2dVbzV0dWJ6V3pTUkhBQmh5d3FfWUJxLUN5VFVyMmhITVprd2NFb2hHOURfOHRwcGtLT210Z256RFlTLVI3cmMxaWY0dEFDYmJudG1GRTI4Qmo4YTJpaG9jTGVHdG1VbHRpM3hFcUlOYV9RWVl1bzN2Vk1XTEhfdXRXaWFDcUFRZXJyc3h1SlA3TWo3WlJRVFhxYlZFRHlkSHkweUtQbnlFaWV3Tmx5UkIyNmR4RXF6TTJXRmpCMDRCWVd1Z281dF8tNjlYSWRqbUdMY3JuZU42clIxanZWWmlVcXl5dFlYRXB5QVA3OGNZMGo4ektNNG9rSkNWby1NTHRxVGJXcG16XzJlbG1FaDY2X3dIUjV1Q2JoZGVYc1ZxU2t3UHRDOFpwYXNoejFSZElMWU1ON0xSeE1aX0N6bU94bklvV0ZXcWZvUXFZbTFZN256eU9VNnd0Q3ByVFBkU3U5QlJLR0lRRXROMXdJTmxjS3FKbUJod1FGbGM5UUdkLU5VRjdsQnFEVVE0MVFzN2lGaWg5dTZlTTlJUlJqa1ozcHRqX1hrOHR1YU9jUkY2SEUwNk5pQndTOUIxcTFpQU9lcW9uN3ZPeFlDN0tiM09hSWhtVVhQVjktdGVZXzB2emozZ1N5VG5OT1FWc1M0emR0Yk1QQWVyS0VUSUM5azlaZmJGcnN1dG4xWVN5RFdjUUhXWDY2d1JTTm1RUWU1eVZuRk1VM1hxWUZ3QlZvNHg4ME9UY0I5cnZrQVBnWU9FRW03WXJ3LU1HT3BibUhMSnA3VHpSekY5WFJnQ25acXBJOUNkaFpXemJrSUNHS2dXNFl4T1FFOHlLdWR4cEVFeE5VRFVpVHRTVlFURWFiV2IzQ2lxLWFhSk01cnZXX1lBeDFOWE5jN3JtdzYyNHlHbHAxYzFpTmVYUXZJd3RKcW9pNGw3cmMxX3d4dl9sQ1kxbTVCandoN2NKY3FLbmpObEdQSklTeGR0Wk1UcG5OLW9wcjZONHRxbWxRSEtRbVpNSE1HUmduVG81SDJfczBid2NoZlkwRDlmazd5ZHFsV1E4bFhCZG05a1ZYLXVSNEJzQjJabWNxSmZkOFRqSzZfUm5La05pOEo2anVOemFBZTRfXzlKTmlmNVQta01rQjBpUnVPeElLT28zTklGNzRJczdRT2s5b1NpUTFxclp0Y0xzXzdWTWZ6dGYxQ093YVJ0ZTdJMFJFZFBNdkJCVTJNV1E0b0NUZjJwdElsQnNvNFdrUklwSGpGY3lrLTk4TmJ6eU5WekllQU9TdmtHSHNNbG1IZ1NDNGZPWUh0QkY5N2Z5UmV6S3Z2Tk9OSWcwUWx3QnFMSGdxdmx4NVRXemFSMmJtWTA3UFpaRjZCM3lWTHhlNHBCaUVjX1hoYng3d0FpT3FRdVRTU3BYa2RaUWYxVTBudlVNUEtZM3htVVJIYUxuN1dhaGNXaERnbG9PN2dvN0RYU1RyQVU3alB2ZEYxT1M2TUxYTWN0akREbjNRWjhpbzhjVnJVaEdIUVNBeVhnTzNWNnVQeExLMWY1Yi0xNVBlU2M3NlNrdllLNlRfbno5aU9qRmZCYlZWVTRqV3hKWElYTUF2LVB2c0U0cEpGemVIVUNOSFhqN3d6RXVLcEFjLUMtY20zVW84amdPTFc5U0x1Q0hVeFQzdWUzdlFUazdRU2hpSE11VHBpSjhWWUtNUUhGQ1I1WWdzZ01DVFAzVElvNzVLMEVYNlFHaGlnaEJ0UGZrS3ZlMmJ5MFY4eXNZVm8ybUxMUVV3LTNJWkF1VmdxWmpNVkhwSjYxYllMVkJnYzZVM2hXS0FvRW1IMzh3eTQ3REZYc1BVNVJnbHIzVTljMXNYQ2M3b2t3aEhXckM3dmZiYmNnamVoTkxLU2kwUGhYX3h1eW1kYXo3ekhidXhCbVZNN3N4UXZzV2UxcXh1NWdtTXpLOEJ3VUNfbDM2eW1YZ0FxYmZCMEU4VW4xRWFpSjdkUHRsUTVGYWJmOFV6c24tS1d0NzAtdFppXzNPME1sNTh0cEJPT0xCWFVlQUN5MTFSdGFTM3F4Z0NaMkhLRXJqc1ZwZkZKSlhjaFp5ODctbHQ2aDZkT05pTHJEZzM2cDJKdmwtN0pZNF9wQ2p4cUZhREY3X0NWdFlUMGc4UTFOcEpBQ0tiYld5UGRnaGlWZjFvc0Z1eUVFckF5SEpoSV9wWHBQaV9HWURfelZQTUduRWxJSmpVakxmbVRSUmU2SlVTNlktSUhKYzl2eVVrV2pjMkNhNV93dWYtelZHTXE2YlFUank3ZEp1V042dlhNSms3amtwU3QzUzVrY0I2cjI1TkZtVnlneHV6N2RZU3dsQ1M0a1pxbndPMzZnZHk3MUJuUkNFMGQ4MzhpamJsZHNJYWM2QUpaVE9wTXBJaVFRNncwbGxneV85UWZQcWNSMHJjdVJnaVNMRVoxZGxUS3dpOGN5V0V2SXFlcU5RbWJuUEJMVTYwZjQ1MUVNU09XVWhRWkVFZmtlRHlZdlU5NE5ZcnhnbWRSTjBCdHFBMXdqWFBwWmFyb3NoSHpMU0hpSXp4bFBFcVNTb2dnTGJ6QUo3aXZkVW5kR2FiWFZ3YmtLaGRtVm5OOUtxOEZ3eTFVcXhnVWh3VUxnVVJtMm9GdzFCbnVzTTA4akZ3cG1xeDM1SmVXbXZXS0hmeTFXeF9hLURlVmJ0MFRFbm1iUWRfVDhIcGtlcW9GMXh6WjAzTXc3em9tNkdDdVVOTmROYlFaQ0FCSmczS0JKQkIwUENWSzN0bUZ6ZTFjamVuZGJWWUM4NkdUakE3TTZqeEtETmctb2Q2S00xTDUwd1VURkg3RWU0UkZ0VTgyLWVnZzJLekRMSmkydDh5M3lwc3pGZTEtN054aXVtenFrWnkyTFFLQTRJQ2htZ3YwTHROTGxsc0VXNGlNYjRPekdOMkI0WkJ6VU1IWDRfZ3phTUNjNEw0ODMySXdjTi13SWZEMm9ZLWtZcWtHVndYM29valFlN0U4R0wxZjViSWJHZGRya3E1V1ZsSDlfOHJZbEFiNzlXdjY2NUE3RVNVbVZveE52c3RocWNUSVM1UGw3aklsMEtUZzExMnFyRS1nMlpvbnRYS2prX1FkQzlvTjBxWWdBdGN3RkwwWk1aUVpnMG5BbzdQbk5MNi1wM0VWcDgzY1VQU1dxZ3N3SG9UbGNYdWxhT0Y3WWRzRkNIbl9fSWlScW9OTl9fTjVBYjFaelBwZ1NSUkVxNndlTEZjeU1aSWZXUFZvM3A1V2dNVGxaTWFfQnFucUpLLTNMaUV1NF8zN0UyX0tobk0xY0FaVHBlS0E5S1EtMjJudGM1RkJFdjV4dlFVclhwWkZlOGpCTHFvd0wyTnA1bXhhSTRHSHRKZk1NZExyb2VQYlE1QVhBSzhWYXFQMDlHZG5CR0QtOFl1UG1ZN3V5cTFoUXg1OGxWVEg0OW5FUm1iNEVVZDNJd08wSnpqTVJCUW5YV1ZVbDBzOUg0M1FWNjZsNEZyczJhaWg4SUlHaDdOck1udWV2Y01BWVdLZDhONkMzLXVXVWRzYTh5ZjdzeDNRX1k0TTlfUDBqNV96VlNEVnVUeEVDamdlOVI4anNGMGpMYTM4Q1JZbmdfU05TX3NjdGwwZFBab01IcGo0a0hncmdMc0tsZG1lZ0IwVzV2d3hkaXcwYWJLS1V5b0pRLUFoYzZnbTZpbFRVMDlRQ0dNVUxOcW9NLWNMd1ZncEE3V21MZ1M2R0lYVVotV2c5TmdvNTYwU3hzUlhpQVloS20wb3psRERpazVjN1NDWmFvU1JTRmFsbXRUaXZBUWxhUGE3c2FlSGFCckRJSWExc3dyVE45bHpzNjJJbTBYa2p0bkxKOGhzYWoxSGNleHpNNFB2VGluNU5oYnNaSXEzLXJTWVk0S2JwazdmSEY3SUx4S0xFQTNPMUVJcEZzdms1ZFZDbV9ERGEtRFZXdTU5X2t6TVZLcnFEcUx5YUpVZ2FBM0NZM0UyeTlxTS1ScWpUNDAzb0ROdVJQTk9ZdlU0bUF6dXJnRjhQMWdWeWItdnA4YTZwVC0yV2RtVm9PT0ZZazlIb21UbHpIMEN6RHR2bXUyMlRoLTN0dF9GcEtjbWZ2NHBsTmZPeHVZbmVENm1KanRvb1VTaDhnWEFXVWZsNm04N3VYZ2c3bFJqb3RyMGtqR1VoemhYUUdZTVJKb0t3dUpSTkR0elhQTVdNVDlYTDRMbnA0ZHZoV3pBQThOUVdCTkoxYnRnYU9IZi1QM1hPSlR3akNJcDdqOD0==) # <-- Put your encrypted keystore file here

          # android_signing:
          #   - keystore_reference
          # groups:
          #   - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS <-- Put your google-services.json)
          vars:
            PACKAGE_NAME: "io.codemagic.sample.reactnative" # <-- Put your package name here e.g. com.domain.myapp
          node: 20.15.1
          npm: 10.7.0
          # node: v18.18.0
          # npm: 9.8.1
        # triggering:
        #   events:
        #     - push
        scripts:
            - name: Release with Codepush
              script: |                            
                git clone https://github.com/microsoft/code-push-server /tmp/code-push-server
                cd /tmp/code-push-server/cli
                npm install && npm run build && npm install -g
            - name: CodePush
              script: |
                 code-push-standalone login "https://codepush.codemagic.io" --access-key "8PND5_YfRz2mwWb-VrY3cRAQyCFX60d042379b56df38d73d9e16"
             
            - name: CodePush add app
              script: |
                code-push-standalone app add Android
                code-push-standalone app ls
            - name: Install npm dependencies
              script: |
                npm install
            - name: Codepush deployment statistics
              script: |
                  
                  code-push-standalone release-react Android android
                  code-push-standalone deployment ls Android
                  code-push-standalone deployment ls Android -k
      
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"    
      
            - name: Build finished successfully
              script: touch ~/SUCCESS
            # - name: Build Android release
            #   script: |
            #     LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(google-play get-latest-build-number --package-name "$PACKAGE_NAME")
            #     if [ -z LATEST_BUILD_NUMBER ]; then
            #       # fallback in case no build number was found from google play. Alternatively, you can `exit 1` to fail the build
            #       UPDATED_BUILD_NUMBER=$BUILD_NUMBER
            #     else
            #       UPDATED_BUILD_NUMBER=$(($LATEST_GOOGLE_PLAY_BUILD_NUMBER + 1))
            #     fi
            #     cd android
            #     ./gradlew bundleRelease \
            #       -PversionCode=$UPDATED_BUILD_NUMBER \
            #       -PversionName=1.0.$UPDATED_BUILD_NUMBER
            # - name: AppKnox security check
            #   script: |
            #      export APPKNOX_ACCESS_TOKEN=$APPKNOX_ACCESS_TOKEN >> $CM_ENV
            # - name: Appknox
            #   script: curl -L https://github.com/appknox/appknox-go/releases/latest/download/appknox-`uname -s`-x86_64 > /usr/local/bin/appknox && chmod +x /usr/local/bin/appknox
                
            # - name: Appknox
            #   script: appknox upload /Users/builder/clone/android/app/build/outputs/bundle/release/app-release.aab
        artifacts:
            - android/app/build/outputs/**/*.aab
